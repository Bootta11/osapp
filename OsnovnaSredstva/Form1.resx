<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>